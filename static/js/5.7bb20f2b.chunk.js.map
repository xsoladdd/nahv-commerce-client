{"version":3,"sources":["utils/axiosInstance.ts","constants.tsx","api/Mutations.ts","../node_modules/react-bootstrap/esm/Row.js","pages/Register/validation.ts","pages/Register/Register.tsx","pages/Register/index.tsx"],"names":["axiosInstance","axiosCore","create","defaults","headers","common","cookies","get","HOST","process","register","a","data","post","res","login","_excluded","DEVICE_SIZES","Row","React","forwardRef","_ref","ref","bsPrefix","className","noGutters","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","_extends","classNames","apply","concat","displayName","defaultProps","RegisterSchema","Yup","shape","firstName","required","min","max","middleName","lastName","password","repeatPassword","oneOf","email","Register","useState","message","variant","customMessage","setCustomMessage","mutateAsync","useMutation","onSuccess","status","Container","initialValues","validationSchema","onSubmit","debounce","values","setSubmitting","errors","touched","handleSubmit","isSubmitting","Form","noValidate","Col","Group","controlId","Label","Control","Field","type","placeholder","value","isInvalid","Text","Alert","Button","disabled"],"mappings":"4OAGMA,EAAgBC,IAAUC,SAEhCF,EAAcG,SAASC,QAAQC,OAA/B,cACEC,IAAQC,IAAI,gBAECP,QCRFQ,EACTC,wBCKSC,EAAQ,uCAAG,+BAAAC,EAAA,6DAASC,EAAT,EAASA,KAAT,SACJZ,EAAca,KAAd,UAAsBL,EAAtB,aAAuCI,GADnC,cAChBE,EADgB,yBAEfA,EAAIF,MAFW,2CAAH,sDAKRG,EAAK,uCAAG,+BAAAJ,EAAA,6DAASC,EAAT,EAASA,KAAT,SACDZ,EAAca,KAAd,UAAsBL,EAAtB,UAAoCI,GADnC,cACbE,EADa,yBAEZA,EAAIF,MAFQ,2CAAH,uD,8JCTdI,EAAY,CAAC,WAAY,YAAa,YAAa,MAInDC,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,MAIxCC,EAAmBC,IAAMC,YAAW,SAAUC,EAAMC,GACtD,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAYJ,EAAKI,UACjBC,EAAUL,EAAKM,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCG,EAAQC,YAA8BT,EAAML,GAE5Ce,EAAoBC,YAAmBT,EAAU,OACjDU,EAAaF,EAAoB,QACjCG,EAAU,GAed,OAdAjB,EAAakB,SAAQ,SAAUC,GAC7B,IAEIC,EAFAC,EAAYT,EAAMO,UACfP,EAAMO,GASb,IAAIG,EAAqB,OAAbH,EAAoB,IAAMA,EAAW,GACrC,OANVC,EADe,MAAbC,GAA0C,kBAAdA,EACvBA,EAAUD,KAEVC,IAISJ,EAAQM,KAAK,GAAKP,EAAaM,EAAQ,IAAMF,MAE7ClB,IAAMsB,cAAcb,EAAWc,YAAS,CAC1DpB,IAAKA,GACJO,EAAO,CACRL,UAAWmB,IAAWC,WAAM,EAAQ,CAACpB,EAAWO,EAAmBN,GAAa,cAAcoB,OAAOX,UAGzGhB,EAAI4B,YAAc,MAClB5B,EAAI6B,aAnCe,CACjBtB,WAAW,GAmCEP,Q,4CCzCF8B,EAAiBC,MAAaC,MAAM,CAC/CC,UAAWF,MACRG,SADQ,0BAERC,IAAI,EAAG,cACPC,IAAI,GAAI,aACXC,WAAYN,MACZO,SAAUP,MACPG,SADO,yBAEPC,IAAI,EAAG,cACPC,IAAI,GAAI,aACXG,SAAUR,MACPI,IAAI,EAAG,cACPC,IAAI,GAAI,aACRF,SAHO,wBAIVM,eAAgBT,MACbI,IAAI,EAAG,cACPC,IAAI,GAAI,aACRF,SAHa,wBAIbO,MAAM,CAACV,IAAQ,YAAa,MAAO,wBACtCW,MAAOX,MAAaW,MAAM,iBAAiBR,SAApC,uB,kCC0KMS,EAlL2B,SAAC,GAAQ,eACjD,MAA0CC,mBAAuB,CAC/DC,QAAS,GACTC,QAAS,WAFX,mBAAOC,EAAP,KAAsBC,EAAtB,KAIQC,EAAgBC,aACtB,SAACvC,GAAD,OAA+BnB,YAASmB,KACxC,CACEwC,UAAW,SAACzD,GACV,OAAoB,MAAhBA,EAAK0D,OACAJ,EAAiB,CACtBH,QAAQ,wBAAD,OAA0BnD,EAAKmD,SACtCC,QAAS,WAGNE,EAAiB,CACtBH,QAAS,uBACTC,QAAS,eAZTG,YAiBR,OACE,eAACI,EAAA,EAAD,CAAW/C,UAAU,OAArB,UACE,6BAAYA,UAAU,yBAAtB,UAEE,oBAAIA,UAAU,QAAd,sBACA,wBAAQA,UAAU,oBAAlB,2CAIF,cAAC,IAAD,CACEgD,cAAe,CACbZ,MAAO,GACPT,UAAW,GACXK,SAAU,GACVC,SAAU,GACVC,eAAgB,GAChBH,WAAY,IAEdkB,iBAAkBzB,EAClB0B,SAAUC,mBAAQ,uCAChB,WACEC,EADF,kBAAAjE,EAAA,6DAEIkE,EAFJ,EAEIA,cAFJ,SAIQV,EAAY,CAAEvD,KAAMgE,IAJ5B,OAKEC,GAAc,GALhB,2CADgB,wDAQhB,KAlBJ,SAqBG,gBAAGD,EAAH,EAAGA,OAAQE,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,aAA1C,OACC,eAACC,EAAA,EAAD,CAAMR,SAAUM,EAAcG,YAAU,EAAxC,UACE,eAAC,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,YAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,mBACA,cAACL,EAAA,EAAKM,QAAN,CACE7D,GAAI8D,IACJC,KAAK,OACLC,YAAY,QACZC,MAAOhB,EAAOzB,UACd0C,UAAWd,EAAQ5B,aAAe2B,EAAO3B,YAE1C2B,EAAO3B,WAAa4B,EAAQ5B,UAC3B,cAAC+B,EAAA,EAAKY,KAAN,CAAWtE,UAAU,wBAArB,SACGsD,EAAO3B,YAER,UAIR,cAACiC,EAAA,EAAD,UACE,eAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,aAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,mBACA,cAACL,EAAA,EAAKM,QAAN,CACE7D,GAAI8D,IACJC,KAAK,OACLC,YAAY,SACZC,MAAOhB,EAAOrB,WACdsC,UAAWd,EAAQxB,cAAgBuB,EAAOvB,aAE3CuB,EAAOvB,YAAcwB,EAAQxB,WAC5B,cAAC2B,EAAA,EAAKY,KAAN,CAAWtE,UAAU,wBAArB,SACGsD,EAAOvB,aAER,UAIR,cAAC6B,EAAA,EAAD,UACE,eAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,mBACA,cAACL,EAAA,EAAKM,QAAN,CACE7D,GAAI8D,IACJC,KAAK,OACLC,YAAY,OACZC,MAAOhB,EAAOpB,SACdqC,UAAWd,EAAQvB,YAAcsB,EAAOtB,WAEzCsB,EAAOtB,UAAYuB,EAAQvB,SAC1B,cAAC0B,EAAA,EAAKY,KAAN,CAAWtE,UAAU,wBAArB,SACGsD,EAAOtB,WAER,aAIV,eAAC0B,EAAA,EAAKG,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,4BACA,cAACL,EAAA,EAAKM,QAAN,CACE7D,GAAI8D,IACJC,KAAK,QACLC,YAAY,cACZC,MAAOhB,EAAOhB,MACdiC,UAAWd,EAAQnB,SAAWkB,EAAOlB,QAEtCkB,EAAOlB,OAASmB,EAAQnB,MACvB,cAACsB,EAAA,EAAKY,KAAN,CAAWtE,UAAU,wBAArB,SACGsD,EAAOlB,QAER,QAEN,eAAC,EAAD,WACE,cAACwB,EAAA,EAAD,UACE,eAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,uBACA,cAACL,EAAA,EAAKM,QAAN,CACE7D,GAAI8D,IACJC,KAAK,WACLC,YAAY,WACZC,MAAOhB,EAAOnB,SACdoC,UAAWd,EAAQtB,YAAcqB,EAAOrB,WAEzCqB,EAAOrB,UAAYsB,EAAQtB,SAC1B,cAACyB,EAAA,EAAKY,KAAN,CAAWtE,UAAU,wBAArB,SACGsD,EAAOrB,WAER,UAGR,cAAC2B,EAAA,EAAD,UACE,eAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,uBACA,cAACL,EAAA,EAAKM,QAAN,CACE7D,GAAI8D,IACJC,KAAK,WACLC,YAAY,kBACZC,MAAOhB,EAAOlB,eACdmC,UACEd,EAAQrB,kBAAoBoB,EAAOpB,iBAGtCoB,EAAOpB,gBAAkBqB,EAAQrB,eAChC,cAACwB,EAAA,EAAKY,KAAN,CAAWtE,UAAU,wBAArB,SACGsD,EAAOpB,iBAER,aAKTO,EAAcF,SACb,cAACgC,EAAA,EAAD,CAAO/B,QAASC,EAAcD,QAA9B,SACGC,EAAcF,UAInB,cAACiC,EAAA,EAAD,CAAQhC,QAAQ,UAAU0B,KAAK,SAASO,SAAUhB,EAAlD,SACGA,EAAY,aAAkB,uBCtL9BpB","file":"static/js/5.7bb20f2b.chunk.js","sourcesContent":["import axiosCore from \"axios\";\nimport cookies from \"js-cookie\";\n\nconst axiosInstance = axiosCore.create();\n\naxiosInstance.defaults.headers.common[\"Authorization\"] =\n  cookies.get(\"access_token\");\n\nexport default axiosInstance;\n","export const HOST: String = process.env.REACT_APP_API_SERVER\n  ? process.env.REACT_APP_API_SERVER\n  : \"\";\n","// import cookies from \"js-cookie\";\nimport cookies from \"js-cookie\";\nimport axiosInstance from \"src/utils/axiosInstance\";\nimport { loginParameters, registerParameters } from \"./interface\";\nimport { HOST } from \"src/constants\";\n\nexport const register = async ({ data }: registerParameters) => {\n  const res = await axiosInstance.post(`${HOST}/register`, data);\n  return res.data;\n};\n\nexport const login = async ({ data }: loginParameters) => {\n  const res = await axiosInstance.post(`${HOST}/login`, data);\n  return res.data;\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import * as Yup from \"yup\";\n\nexport const RegisterSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .required(`First name is required`)\n    .min(2, \"Too Short!\")\n    .max(20, \"Too Long!\"),\n  middleName: Yup.string(),\n  lastName: Yup.string()\n    .required(`Last name is required`)\n    .min(2, \"Too Short!\")\n    .max(20, \"Too Long!\"),\n  password: Yup.string()\n    .min(8, \"Too Short!\")\n    .max(15, \"Too Long!\")\n    .required(`Password is required`),\n  repeatPassword: Yup.string()\n    .min(8, \"Too Short!\")\n    .max(15, \"Too Long!\")\n    .required(`Password is required`)\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n  email: Yup.string().email(\"Invalid email\").required(`Email is required`),\n});\n","//import React from 'react'\n\nimport React, { useState } from \"react\";\nimport { Alert, Button, Col, Container, Form, Row } from \"react-bootstrap\";\n// import { LoginInterface } from \"../Login/interface\";\nimport { MessageState, RegisterInterface, RegisterProps } from \"./interface\";\nimport { Formik, FormikHelpers, Field } from \"formik\";\nimport { RegisterSchema } from \"./validation\";\nimport { useMutation } from \"react-query\";\nimport { registerParameters } from \"src/api/interface\";\nimport { register } from \"src/api/Mutations\";\nimport { debounce } from \"lodash\";\n\nconst Register: React.FC<RegisterProps> = ({}) => {\n  const [customMessage, setCustomMessage] = useState<MessageState>({\n    message: \"\",\n    variant: \"danger\",\n  });\n  const { mutateAsync } = useMutation(\n    (props: registerParameters) => register(props),\n    {\n      onSuccess: (data) => {\n        if (data.status !== 200) {\n          return setCustomMessage({\n            message: `Registration Failed. ${data.message as string}`,\n            variant: \"danger\",\n          });\n        }\n        return setCustomMessage({\n          message: \"Registration Success\",\n          variant: \"success\",\n        });\n      },\n    }\n  );\n  return (\n    <Container className=\"pt-5\">\n      <blockquote className=\"blockquote text-center\">\n        {/* <p className=\"display-4 mb-0\">Register</p> */}\n        <h1 className=\" mb-0\">Register</h1>\n        <footer className=\"blockquote-footer\">\n          Fillup the form to join us\n        </footer>\n      </blockquote>\n      <Formik\n        initialValues={{\n          email: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          password: \"\",\n          repeatPassword: \"\",\n          middleName: \"\",\n        }}\n        validationSchema={RegisterSchema}\n        onSubmit={debounce(\n          async (\n            values: RegisterInterface,\n            { setSubmitting }: FormikHelpers<RegisterInterface>\n          ) => {\n            await mutateAsync({ data: values });\n            setSubmitting(false);\n          },\n          1000\n        )}\n      >\n        {({ values, errors, touched, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit} noValidate>\n            <Row>\n              <Col>\n                <Form.Group controlId=\"firstName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    as={Field}\n                    type=\"text\"\n                    placeholder=\"First\"\n                    value={values.firstName}\n                    isInvalid={touched.firstName && !!errors.firstName}\n                  />\n                  {errors.firstName && touched.firstName ? (\n                    <Form.Text className=\"invalid-feedback pl-2\">\n                      {errors.firstName}\n                    </Form.Text>\n                  ) : null}\n                </Form.Group>\n              </Col>\n\n              <Col>\n                <Form.Group controlId=\"middleName\">\n                  <Form.Label>&nbsp;</Form.Label>\n                  <Form.Control\n                    as={Field}\n                    type=\"text\"\n                    placeholder=\"Middle\"\n                    value={values.middleName}\n                    isInvalid={touched.middleName && !!errors.middleName}\n                  />\n                  {errors.middleName && touched.middleName ? (\n                    <Form.Text className=\"invalid-feedback pl-2\">\n                      {errors.middleName}\n                    </Form.Text>\n                  ) : null}\n                </Form.Group>\n              </Col>\n\n              <Col>\n                <Form.Group controlId=\"lastName\">\n                  <Form.Label>&nbsp;</Form.Label>\n                  <Form.Control\n                    as={Field}\n                    type=\"text\"\n                    placeholder=\"Last\"\n                    value={values.lastName}\n                    isInvalid={touched.lastName && !!errors.lastName}\n                  />\n                  {errors.lastName && touched.lastName ? (\n                    <Form.Text className=\"invalid-feedback pl-2\">\n                      {errors.lastName}\n                    </Form.Text>\n                  ) : null}\n                </Form.Group>\n              </Col>\n            </Row>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                as={Field}\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={values.email}\n                isInvalid={touched.email && !!errors.email}\n              />\n              {errors.email && touched.email ? (\n                <Form.Text className=\"invalid-feedback pl-2\">\n                  {errors.email}\n                </Form.Text>\n              ) : null}\n            </Form.Group>\n            <Row>\n              <Col>\n                <Form.Group controlId=\"password\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    as={Field}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={values.password}\n                    isInvalid={touched.password && !!errors.password}\n                  />\n                  {errors.password && touched.password ? (\n                    <Form.Text className=\"invalid-feedback pl-2\">\n                      {errors.password}\n                    </Form.Text>\n                  ) : null}\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"repeatPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    as={Field}\n                    type=\"password\"\n                    placeholder=\"Repeat Password\"\n                    value={values.repeatPassword}\n                    isInvalid={\n                      touched.repeatPassword && !!errors.repeatPassword\n                    }\n                  />\n                  {errors.repeatPassword && touched.repeatPassword ? (\n                    <Form.Text className=\"invalid-feedback pl-2\">\n                      {errors.repeatPassword}\n                    </Form.Text>\n                  ) : null}\n                </Form.Group>\n              </Col>\n            </Row>\n\n            {customMessage.message && (\n              <Alert variant={customMessage.variant}>\n                {customMessage.message}\n              </Alert>\n            )}\n\n            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? `Loading...` : \"Register\"}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  );\n};\nexport default Register;\n","import Register from \"./Register\";\nexport default Register;\n"],"sourceRoot":""}